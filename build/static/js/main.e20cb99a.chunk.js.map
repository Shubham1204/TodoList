{"version":3,"sources":["components/TodoItem.js","components/Todos.js","components/Header.js","components/pages/About.js","components/AddTodo.js","App.js","serviceWorker.js","index.js"],"names":["TodoItem","getStyle","background","padding","borderBottom","textDecoration","props","todo","completed","this","id","title","className","style","type","onChange","markComplete","bind","onClick","delTodo","Component","Todos","todos","map","key","Header","to","About","AddTodo","state","e","setState","target","name","value","onSubmit","preventDefault","addTodo","display","placeholder","flex","App","filter","axios","delete","then","res","post","data","get","exact","path","render","Fragment","component","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e20cb99a.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './TodoItem.css';\r\n\r\nclass TodoItem extends Component {\r\n    getStyle = () => {\r\n        return {\r\n            background: '#f4f4f4',\r\n            padding:'2px',\r\n            borderBottom: '1px #ccc dashed',\r\n            textDecoration: this.props.todo.completed?'line-through':'none'\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        const {id,title} = this.props.todo\r\n        return (\r\n            \r\n            <div className=\"todoitem\" style={this.getStyle()}>\r\n\r\n    <p> \r\n        <input type=\"checkbox\" className=\"mr-3 ml-2\" onChange={this.props.markComplete.bind(this,id)} />\r\n        {title}\r\n        <button className=\"btn mr-4\" onClick={this.props.delTodo.bind(this,id)}>Delete</button>\r\n    </p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TodoItem;","import React, { Component } from 'react';\r\nimport TodoItem from './TodoItem';\r\n\r\nclass Todos extends Component {\r\n    render() {\r\n        return this.props.todos.map((todo)=>\r\n            <div>\r\n                <TodoItem todo={todo} key={todo.id} markComplete={this.props.markComplete} delTodo={this.props.delTodo}/>\r\n            </div>);\r\n         \r\n    }\r\n}\r\n\r\nexport default Todos;        ","import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport './Header.css';\r\n\r\nclass Header extends Component {\r\n    render() {\r\n        return (\r\n            <header className=\"header\">\r\n               <h1>ToDo List</h1>\r\n                <Link className=\"link\" to=\"/\">Home</Link> | <Link className=\"link\" to=\"/about\">About</Link>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\n\r\nclass About extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>About</h1>\r\n                <p>This is a Todo Application. Made by Shubham Gupta</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default About;","import React, { Component } from 'react';\r\nimport './TodoItem.css'\r\n\r\nclass AddTodo extends Component {\r\n    state={\r\n        title:''\r\n    }\r\n\r\n    onChange = (e) => this.setState({[e.target.name]: e.target.value});\r\n\r\n    onSubmit = (e) =>{\r\n        e.preventDefault();\r\n        this.props.addTodo(this.state.title);\r\n        this.setState({title:''});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.onSubmit} style={{display:'flex'}}>\r\n                <input type=\"text\" name=\"title\" placeholder=\"Add Todo...\"\r\n                style={{flex:'10', padding:'5px'}} value={this.state.title} \r\n                onChange={this.onChange}/>\r\n                <input type=\"submit\" value=\"Add\" className=\"add-btn\" style={{flex:'2'}}/>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddTodo;","import React, {Component} from 'react';\nimport {BrowserRouter as Router,Route} from \"react-router-dom\";\nimport './App.css';\n\nimport Todos from './components/Todos';\nimport Header from './components/Header';\nimport About from './components/pages/About';\nimport axios from 'axios';\nimport AddTodo from './components/AddTodo';\n\nclass App extends Component{\n  state = {\n  todos : [\n    // {\n    //   id:1,\n    //   title:\"heyyyyy\",\n    //   completed:true\n    // },\n    // {\n    //   id:2,\n    //   title:\"gfchjkcgvb\",\n    //   completed:false\n    // },\n    // {\n    //   id:3,\n    //   title:\"qwertyuiop\",\n    //   completed:false\n    // }\n  ]\n}\n\ncomponentDidMount() {\n  axios.get('https://jsonplaceholder.typicode.com/todos?_limit=10')\n  .then(res => this.setState({todos: res.data}))\n}\n\nmarkComplete= (id) => {\n  this.setState({todos:this.state.todos.map(todos =>{\n    if(todos.id === id){\n      todos.completed = !todos.completed\n    }\n    return todos;\n  })})\n}\n\ndelTodo = (id) =>{\n  this.setState({todos:[...this.state.todos.filter(todo => \n    todo.id !==id)]});\n}\n\ndelTodo = (id) =>{\n  axios.delete(`https://jsonplaceholder.typicode.com/todos/${id}`)\n  .then(res => this.setState({todos:[...this.state.todos.filter(todo => \n    todo.id !==id)]}));\n}\n\naddTodo = (title) => {\n  axios.post('https://jsonplaceholder.typicode.com/todos',{\n    title,\n    completed: false\n  }).then(res => this.setState({todos: [...this.state.todos,res.data]}));\n    \n  \n}\n\nrender(){\n  return (\n    <Router>\n    <div className=\"container-fluid\">\n      <Header />\n      <Route exact path=\"/\" render={() => (\n        <React.Fragment>\n        <AddTodo addTodo={this.addTodo}/>\n        <Todos todos={this.state.todos} markComplete={this.markComplete} delTodo={this.delTodo}/>\n        \n        </React.Fragment>\n      )}  />\n      \n      <Route path=\"/about\" component={About} />\n    </div>\n    </Router>\n  );\n}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}